package main

import (
	"testing"
)

// tests for the AdventOfCode 2023 day 12 solutions

type Case struct {
	In  string
	Out string
}

const example = `???.### 1,1,3
.??..??...?##. 1,1,3
?#?#?#?#?#?#?#? 1,3,1,6
????.#...#... 4,1,1
????.######..#####. 1,6,5
?###???????? 3,2,1`

var problem1cases = []Case{
	// cases here
	//	{"??????#?????.??#????????#?????.??#????????#?????.??#????????#?????.??#????????#?????.??#? 3,3,1,1,1,3,3,1,1,1,3,3,1,1,1,3,3,1,1,1,3,3,1,1,1", "x"},
	{"???.### 1,1,3", "1"},
	{".??..??...?##. 1,1,3", "4"},
	{"?#?#?#?#?#? 1,3,1,2", "1"},
	{"?#?#?#?#?#?#?#? 1,3,1,6", "1"},
	{"????.#...#... 4,1,1", "1"},
	{"????.######..#####. 1,6,5", "4"},
	{"?###???????? 3,2,1", "10"},
	{example, "21"},
}

func TestProblem1(t *testing.T) {
	for _, c := range problem1cases {
		actual := solve1(c.In)
		if c.Out != actual {
			t.Fatalf("Expected: '%s', Actual: '%s'", c.Out, actual)
		}
	}
}

var problem2cases = []Case{
	// cases here

	{"???.### 1,1,3", "1"},
	{".??..??...?##. 1,1,3", "16384"},
	{"?#?#?#?#?#?#?#? 1,3,1,6", "1"},
	{"????.#...#... 4,1,1", "16"},
	{"????.######..#####. 1,6,5", "2500"},
	{"?###???????? 3,2,1", "506250"},

	{example, "525152"},
}

/*
1 => 1
4 => 16384
1 => 1
1 => 16
4 => 2500
10 => 506250
*/
func TestProblem2(t *testing.T) {
	for _, c := range problem2cases {
		actual := solve2(c.In)
		if c.Out != actual {
			t.Fatalf("Expected: '%s', Actual: '%s'", c.Out, actual)
		}
	}
}
